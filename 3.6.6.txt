Part 2 - Step 1: parsexml.py

b & c:
import xml.etree.ElementTree as ET
import re
xml = ET.parse("myfile.xml")
root = xml.getroot()

d & e:
ns = re.match('{.*}', root.tag).group(0)
editconf = root.find("{}edit-config".format(ns))
defop = editconf.find("{}default-operation".format(ns))
testop = editconf.find("{}test-option".format(ns))

print("The default-operation contains: {}".format(defop.text))
print("The test-option contains: {}".format(testop.text))

Part 3 - Step 1: parsejson.py

b, c & d:
import json
import yam

with open('myfile.json','r') as json_file:
    ourjson = json.load(json_file)

print(ourjson)

Step 2: parsejson.py
b: # add to the end of the code
print("The access token is: {}".format(ourjson['access_token']))
print("The token expires in {} seconds.".format(ourjson['expires_in']))

Step 3: Add yaml output

print("\n\n---")
print(yaml.dump(ourjson))

Part 4 - Step 1: parseyaml.py

b, c & d:
import json
import yaml

with open('myfile.yaml','r') as yaml_file:
    ouryaml = yaml.safe_load(yaml_file)

print(ouryaml)

Step 2: Add formatted print statements

print("The access token is {}".format(ouryaml['access_token']))
print("The token expires in {} seconds.".format(ouryaml['expires_in']))

Step 3: Convert to json

print("\n\n")
print(json.dumps(ouryaml, indent=4))

